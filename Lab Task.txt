using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BankAccounnt
{
    abstract class Account
    {
        public string AccName { get; set; }
        public string AccNo { get; set; }
        public double Balance { get; set; }

        public Account() { }
        public Account(string accName, string accNo, double balance)
        {
            AccName = accName;
            AccNo = accNo;
            Balance = balance;
        }

        public void Deposit(double amount)
        {
            Balance += amount;
            Console.WriteLine("your account credited by {0}. Current balance: {1}", amount, Balance);
        }

        public void ShowInfo()
        {
            Console.WriteLine("\tAccount Name: " + AccName);
            Console.WriteLine("\tAccount Number: " + AccNo);
            Console.WriteLine("\tCurrent Balance: " + Balance);
            Console.WriteLine();
        }

         public abstract void Withdraw(double amount);
         public abstract void Transfer(Account acc, double amount);
    }
    class SuperSavings: Account
    {
        public double openingAmount { get; set; }
        public SuperSavings(string accName, string accNo, double balance): base(accName, accNo, balance)
        {
            this.openingAmount = balance;
        }

        public override void Withdraw(double amount)
        {
            if(amount <= Balance-(openingAmount * 20 / 100))
            {
                Balance -= amount;
            }
            else
            {
                Console.WriteLine("Not sufficient fund. Min amount " + openingAmount * 20 / 100);
            }
        }

        public override void Transfer(Account acc, double amount)
        {
            if (amount <= Balance-(openingAmount * 20 / 100))
            {
                Balance -= amount;
                acc.Balance += amount;
            }
            else
            {
                Console.WriteLine("Not sufficient fund. Min amount " + openingAmount * 20 / 100);
            }
        }
    }
    class Overdraft:Account
    {
        public int limit { get; set; }

        public Overdraft() { }
        public Overdraft(string accName, string accNo, double balance, int limit): base(accName, accNo, balance)
        {
            this.limit = limit;
        }

        public override void Withdraw(double amount)
        {
            if(amount <= Balance + limit)
            {
                Balance -= amount;
            }
            else
            {
                Console.WriteLine("Not sufficient fund.");
            }
        }
        public override void Transfer(Account acc, double amount)
        {
            if(amount <= Balance + limit)
            {
                Balance -= amount;
                acc.Balance += amount;
            }
            else
            {
                Console.WriteLine("Not sufficient fund.");
            }
        }
    }
    class Program
    {
        static void Main(string[] args)
        {
            Account x = new Savings("X", "1", 50000.0f);
            Account y = new Current("Y", "2", 25000f);
            Account z = new Fixed("Z", "3", 17500f, 2019, 15);
            
            Account ss = new SuperSavings("P", "4", 1500f);
            ss.Withdraw(100);
            ss.ShowInfo();

            Account overdraft = new Overdraft("Q", "5", 12000f, 8400);
            overdraft.Transfer(ss, 63000);
            overdraft.ShowInfo();

            Customer customer = new Customer("R");

            x.ShowInfo();
            x.Deposit(21000f);
            x.ShowInfo();
            x.Withdraw(32000);
            x.ShowInfo();

            z.Deposit(53000);
            z.Withdraw(14000);
            z.ShowInfo();

            x.Transfer(y, 12100f);
            y.ShowInfo();

            customer.AddAccount(x, y);
            customer.AccDetails();
        }
    }
}
